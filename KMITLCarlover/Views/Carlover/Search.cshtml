@model IEnumerable<KMITL.Carlover.Models.SearchModel>
@*@model  Registermodel*@
@using Kendo.Mvc
@using System.Data
@using System.Linq
@using KMITL.Carlover.Models
@{
    ViewBag.Title = "Search";
    var _CarloverController = "Carlover";
}



<script type="text/javascript">

     function OnRequestEnd(e) {
         if (e.type == "create" || e.type == "update") {
             var grid = $('#Gridgarage').data('kendoGrid');
             grid.dataSource.read();       
           
        }
     }
     function error_handler(e) {
         if (e.errors) {
             var message = "Errors:\n";
             $.each(e.errors, function (key, value) {
                 if ('errors' in value) {
                     $.each(value.errors, function () {
                         message += this + "\n";
                     });
                 }
             });
             alert(message);
         }
     }
    </script>

<table>
    <tr style="border-bottom:dotted;margin-bottom:20px">
        <td>
            <div id="colors">
               <label for="input">search by name</label>
            </div>
        </td>
        <td>
               @(Html.Kendo().AutoComplete()
                             .Name("input")
                     .BindTo(new string[] 
                     {
                        "Red-violet",
                        "Red",
                        "Red-orange",
                        "Orange",
                        "Yellow-orange",
                        "Yellow",
                        "Yellow-green",
                        "Green",
                        "Blue-green",
                        "Blue",
                        "Blue-violet",
                        "Violet"
                     })
                )
             
        </td>
        <td>
            <button>GO</button>
        </td>
    </tr>
    <tr>
        <td>
            <br />
            <div>
                @(Html.Kendo().MultiSelect()
                .DataTextField("Text")
                .DataValueField("Value")
                .Name("Multi")
                .Placeholder("select service")
                .BindTo(new List<ViewScheduleModel>()
            {
                new ViewScheduleModel() {Text = "1", Value = 1},
                new ViewScheduleModel() {Text = "2", Value = 2},
                new ViewScheduleModel() {Text = "3", Value = 3},
                new ViewScheduleModel() {Text = "4", Value = 4},
                new ViewScheduleModel() {Text = "5", Value = 5},
                new ViewScheduleModel() {Text = "6", Value = 6},
                new ViewScheduleModel() {Text = "7", Value = 7},
                new ViewScheduleModel() {Text = "8", Value = 8},
                new ViewScheduleModel() {Text = "9", Value = 9},
                new ViewScheduleModel() {Text = "10", Value = 10},
                new ViewScheduleModel() {Text = "11", Value = 11},
                new ViewScheduleModel() {Text = "12", Value = 12},
                new ViewScheduleModel() {Text = "13", Value = 13},
                new ViewScheduleModel() {Text = "14", Value = 14},
                new ViewScheduleModel() {Text = "15", Value = 15},
                new ViewScheduleModel() {Text = "16", Value = 16},
                new ViewScheduleModel() {Text = "17", Value = 17},
                new ViewScheduleModel() {Text = "18", Value = 18},
                new ViewScheduleModel() {Text = "19", Value = 19},
                new ViewScheduleModel() {Text = "20", Value = 20},
                new ViewScheduleModel() {Text = "21", Value = 21},
                new ViewScheduleModel() {Text = "22", Value = 22},
                new ViewScheduleModel() {Text = "23", Value = 23},
                new ViewScheduleModel() {Text = "24", Value = 24}, 
                new ViewScheduleModel() {Text = "25", Value = 25},
                new ViewScheduleModel() {Text = "26", Value = 26},
                new ViewScheduleModel() {Text = "27", Value = 27},
                new ViewScheduleModel() {Text = "28", Value = 28},
                new ViewScheduleModel() {Text = "29", Value = 29},
                new ViewScheduleModel() {Text = "30", Value = 30}, 
                new ViewScheduleModel() {Text = "31", Value = 31}
            })
                
            )
            </div>
        </td>
    </tr>
    <tr>
            <td style ="width: 400px">Province:
                @(
 Html.Kendo().DropDownListFor(m => m)
                .OptionLabel("Select Province")
                .DataTextField("HoName")
                .DataValueField("HoId")
                .HtmlAttributes(new { data_bind = "value:HoId", style = "width: 250px" })
                .Name("MemberType1")
                .DataSource((source =>
                {
                    source.Read(read =>
                    {
                        read.Action("JsonHolidayRead", _CarloverController);
                    })
                    .ServerFiltering(true);
                }))
        //.Events(e =>
        //{
        //    e.Select("select1");
        //})
    )
            </td>
            <td style ="width: 400px">District:
                @(
 Html.Kendo().DropDownListFor(m => m)
                .OptionLabel("Select District")
                .DataTextField("HoName")
                .DataValueField("HoId")
                .HtmlAttributes(new { data_bind = "value:HoId", style = "width: 250px" })
                .Name("MemberType2")
                .DataSource((source =>
                {
                    source.Read(read =>
                    {
                        read.Action("JsonHolidayRead", _CarloverController);
                    })
                    .ServerFiltering(true);
                }))
        //.Events(e =>
        //{
        //    e.Select("select1");
        //})
    )
            </td>
            <td style ="width: 550px">Sub-district:
                @(
 Html.Kendo().DropDownListFor(m => m)
                .OptionLabel("Select Sub-district")
                .DataTextField("HoName")
                .DataValueField("HoId")
                .HtmlAttributes(new { data_bind = "value:HoId", style = "width: 250px" })
                .Name("MemberType3")
                .DataSource((source =>
                {
                    source.Read(read =>
                    {
                        read.Action("JsonHolidayRead", _CarloverController);
                    })
                    .ServerFiltering(true);
                }))
        //.Events(e =>
        //{
        //    e.Select("select1");
        //})
    )
            </td>
            <td><button>GO</button></td>
        </tr>
    @*<tr>
        <td>
            <div class="box">
                <div class="box-col">
                    <h4>Set / Get Value</h4>
                    <ul class="options">
                        <li>
                            <input id="value" type="text" class="k-textbox" />
                            <button id="set" class="k-button">Set value</button>
                        </li>
                        <li>
                            <button id="get" class="k-button">Get value</button>
                        </li>
                    </ul>
                </div>
                <div class="box-col">
                    <h4>Find item</h4>
                    <ul class="options">
                        <li>
                            <input id="word" value="B" class="k-textbox" />
                            <button id="search" class="k-button">Search</button>
                        </li>
                    </ul>
                </div>
            </div> 
        </td>
    </tr>*@
</table>
 <br />

@*            <script>
                $(document).ready(function () {
                    var autocomplete = $("#input").data("kendoAutoComplete"),
                        setValue = function (e) {
                            if (e.type != "keypress" || kendo.keys.ENTER == e.keyCode)
                                autocomplete.value($("#value").val());
                        },
                        setSearch = function (e) {
                            if (e.type != "keypress" || kendo.keys.ENTER == e.keyCode)
                                autocomplete.search($("#word").val());
                        };

                    $("#set").click(setValue);
                    $("#value").keypress(setValue);
                    $("#search").click(setSearch);
                    $("#word").keypress(setSearch);

                    $("#get").click(function () {
                        alert(autocomplete.value());
                    });
                });
           </script>*@
            <style scoped>
                #colors {
                    width: 366px;
                    @*background: url('@Url.Content("~/Content/web/autocomplete/palette.png")') transparent no-repeat right 0;*@
                    text-align: center;
 				}
                #colors label {
                    display: block;
                    color: #333;
                    padding-bottom: 5px;
 				}
                #input {
                    margin-right: 50px;
                }
                .box .k-textbox {
                    width: 80px;
                }
                .box .k-button {
                    min-width: 80px;
                }
            </style>
        
<div>
 
@(Html.Kendo().Grid(Model)
    .Name("Gridgarage")
    .Columns(columns =>
    {
        //columns.Bound(p => p.AsId  ).Width(50).Title("No").Hidden();
        //columns.Bound(p => p.InId).Width(100).Title("Instructor").EditorTemplateName("InstructorRange").ClientTemplate("#:InName#");
        //columns.Bound(p => p.CoId).Width(100).Title("Course").EditorTemplateName("CourseRange").ClientTemplate("#:CoName#");
        //columns.Bound(p => p.RtId ).Width(100).Title("RoomType").EditorTemplateName("RoomTypeRange2").ClientTemplate("#:RTName#");
        //columns.Bound(p => p.SeId).Width(200).Title("Section").EditorTemplateName("SectionRange").ClientTemplate("# if(typeof(SeName) != 'undefined' && SeName != null) {#" + "#=SeName.join(',')#" + "#} #");
        //columns.Bound(p => p.Duration ).Width(100).Title("Duration");
        //columns.Bound(p => p.TimePerWeek).Width(100).Title("Time/Week");
        //columns.Bound(p => p.TimePerTerm ).Width(100).Title("Time/Term");

        columns.Bound(p => p.MemberID).Width(50).Title("No").Hidden();
        columns.Bound(p => p.Username).Width(100).Title("อู่ซ่อมรถ");
        columns.Template(e => { }).ClientTemplate(" ").Width(100).Title("Picture");
        columns.Template(
   @<text>
    <img alt="Static Image Alt Text" src="@Url.Content("~/Images/garage/star.png") " />
    <img alt="Static Image Alt Text" src="@Url.Content("~/Images/garage/star.png") " />
    <img alt="Static Image Alt Text" src="@Url.Content("~/Images/garage/star.png") " />
    <img alt="Static Image Alt Text" src="@Url.Content("~/Images/garage/star.png") " />
    <img alt="Static Image Alt Text" src="@Url.Content("~/Images/garage/star.png") " />
  </text>
).Title("คะแนน").Width(100);
        columns.Template(@<a>กรุงเทพมหานคร</a>).Width(70).Title("จังหวัด");
        columns.Template(@<a>ลาดกระบัง</a>).Width(70).Title("เขต/อำเภอ");
        columns.Template(@<a>ลาดกระบัง</a>).Width(70).Title("แขวง/ตำบล");
     })

    //.ToolBar(toolBar => toolBar.Template("<a href='javascript: void(0)' class='abutton create' onclick='createRow()' title='button create'>button create</a>"))
    .HtmlAttributes(new { style = "height: 600px;" })
    //.Editable(editable => { editable.Mode(GridEditMode.PopUp).TemplateName("AssignmentPopup").Window(w=> w.Title("Insert/Update")).DisplayDeleteConfirmation("Are you sure you want to delete this user?"); })
    //.Editable(editable => { editable.Mode(GridEditMode.PopUp).DisplayDeleteConfirmation("Are you sure you want to delete this user?"); })    
    //.Editable(editable => { editable.Mode(GridEditMode.InCell);  })
    .Sortable()
    .Scrollable()
    .Filterable()
    .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
    .DataSource(dataSource => dataSource
        .Ajax()
        //.ServerOperation(false)
        .PageSize(5)
        .Events(events =>
            {
                events.Error("error_handler");
                //events.Sync("dataSource_requestEnd");   
                events.RequestEnd("OnRequestEnd");
                //events.Change("error_handler");
                //events.Sync("error_handler");               
            })
        .Model(model => { 
            model.Id(p => p.MemberID ); model.Field(p => p.MemberID ).Editable(false);
             
        })
            .Read(read => read.Action("SelectSearch", _CarloverController))//.Type(HttpVerbs.Get))
    )
)
</div>
 <div id="map_canvas" style="width: 640px; height: 480px;">  </div>
      







    

